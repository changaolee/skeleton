# Copyright 2023 lichangao(李长傲) <changao.li.work@outlook.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file. The original repo for
# this file is https://github.com/changaolee/skeleton.

# RPC 服务地址
rpcserver: ${SKT_AUTHZ_SERVER_RPCSERVER}  # skt-apiserver grpc 服务器地址和端口

# TLS 客户端证书文件
client-ca-file: ${SKT_AUTHZ_SERVER_CLIENT_CA_FILE}  # TLS 客户端证书，如果指定，则该客户端证书将被用于认证

# REST 服务配置
server:
  mode: debug  # 可选值 release, debug, test
  healthz: true  # 是否开启健康检查，如果开启会安装 /healthz 路由
  middlewares: recovery,secure,nocache,cors,dump  # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开

# HTTP 相关配置
insecure:
  bind-address: ${SKT_AUTHZ_SERVER_INSECURE_BIND_ADDRESS} # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
  bind-port: ${SKT_AUTHZ_SERVER_INSECURE_BIND_PORT} # 提供非安全认证的监听端口，默认为 9090

# HTTPS 相关配置
secure:
  bind-address: ${SKT_AUTHZ_SERVER_SECURE_BIND_ADDRESS} # HTTPS 安全模式的 IP 地址，默认为 0.0.0.0
  bind-port: ${SKT_AUTHZ_SERVER_SECURE_BIND_PORT} # 使用 HTTPS 安全模式的端口号，设置为 0 表示不启用 HTTPS，默认为 9443
  tls:
    cert-key:
      cert-file: ${SKT_AUTHZ_SERVER_SECURE_TLS_CERT_KEY_CERT_FILE} # 包含 x509 证书的文件路径，用 HTTPS 认证
      private-key-file: ${SKT_AUTHZ_SERVER_SECURE_TLS_CERT_KEY_PRIVATE_KEY_FILE} # TLS 私钥

# Redis 相关配置
redis:
  host: ${REDIS_HOST} # Redis 地址，默认 127.0.0.1:6379
  port: ${REDIS_PORT} # Redis 端口，默认 6379
  password: ${REDIS_PASSWORD} # Redis 密码
  database:  0 # Redis 数据库

# 日志配置
log:
  name: authzserver  # Logger 的名字
  development: true  # 是否是开发模式。如果是开发模式，会对 DPanicLevel 进行堆栈跟踪
  level: debug  # 日志级别，优先级从低到高依次为：debug, info, warn, error, dpanic, panic, fatal
  format: console  # 支持的日志输出格式，目前支持 console 和 json 两种，console 其实就是 text 格式
  enable-color: true  # 是否开启颜色输出
  disable-caller: false  # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false  # 是否在 panic 及以上级别禁止打印堆栈信息
  output-paths: ${SKT_LOG_DIR}/skt-authz-server.log,stdout  # 支持输出到多个输出，逗号分开，支持输出到标准输出（stdout）和文件。
  error-output-paths: ${SKT_LOG_DIR}/skt-authz-server.error.log  # zap 内部（非业务）错误日志输出路径，多个输出，逗号分开

# JWT 配置
jwt:
  realm: JWT  # jwt 标识
  key: BHpZUtWXhQM2f09bLcPLLoRB6yCEX04IpyXKZD3DxwU  # 服务端密钥
  timeout: 24h  # token 过期时间(小时)
  max-refresh: 24h  # token 更新时间(小时)